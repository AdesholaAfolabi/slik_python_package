.. Slik documentation master file, created by
   sphinx-quickstart on Thu Mar 18 18:16:23 2021.
   You can adapt this file completely to your liking, but it should at least
   contain the root `toctree` directive.

Welcome to Slik's documentation!
================================

.. image:: images/slik.png
   :width: 800px
   :height: 500px
   :scale: 60 %
   :alt: alternate text
   :align: center

Data scientists struggle to prepare their data for building machine learning models and all machine learning
projects require data wrangling, data preprocessing, feature engineering which takes about 80% of the model building process.

Slik is a data to modeling tool that helps data scientists navigate the issues of basic data wrangling
and preprocessing steps.  The idea behind Slik is to jump-start supervised learning projects.

Slik has several tools that makes it easy to load data of any format, clean and inspect your data.
It offers a quick  way to pre-process data and perform feature engineering. Building machine learning models is an 
inherently iterative task and data scientists face challenges of reproducing the models and productionalizing model pipelines.
 
With Slik, Data scientists can build model pipelines. Slik provides explainability in the pipeline process in the form of DAG 
showing each step in the build process.  With every build process/experiment, Slik logs the metadata for each run.

Slik provides an easy-to-use solutions for supervised machine learning. Here is a link to the staging repository.

This project tries to help make supervised machine learning more accessible for
beginners, and reduce boiler plate for common tasks.

This library is in very active development, so it's not recommended for production use.

Development at `github.com/Sensei-akin/slik_python_package/staging/ <https://github.com/Sensei-akin/slik_python_package/tree/staging/>`_.

Examples
--------
A minimum example of using slik for preprocessing is:

    >>> import slik
    >>> from sklearn.model_selection import train_test_split
    >>> from sklearn.datasets import load_digits
    >>> X, y = load_digits(return_X_y=True)
    >>> X_train, X_test, y_train, y_test = train_test_split(X, y, random_state=1)
    >>> sc = dabl.SimpleClassifier().fit(X_train, y_train)
    Running ...
    >>> print("Accuracy score", sc.score(X_test, y_test))
    Accuracy score 0.9...


This will return increasingly better results immediately and should conclude
within several seconds with an accuracy of 0.98.



.. toctree::
   :maxdepth: 3
   :caption: Contents

   installs

.. toctree::
   :maxdepth: 3
   :caption: Getting Started

   quick_start
   titanic.ipynb
   

.. toctree::
   :maxdepth: 2
   :caption: slik API:

   modules

   

Indices and tables
==================

* :ref:`genindex`
* :ref:`modindex`
* :ref:`search`
